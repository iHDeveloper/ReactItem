version: 2.1

orbs:
  discord: teka23/discord@0.0.1

jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/openjdk:8-jdk

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      - discord/notify:
          message: ":tools: Building..."
          color: "16312092"

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle.kts" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Installing dependencies
          command: gradle dependencies

      - run:
          name: Running Build Tools
          command: gradle run-build-tools -PuseLocalDependency=false

      - run:
          name: Cleaning Build Tools Garbage
          command: "find .build-tools -mindepth 1 -maxdepth 1 -type d ! -name '*.jar' -exec rm -rf {} \\; && find .build-tools -type f ! -name '*.jar' -delete"

      - save_cache:
          paths:
            - ~/.gradle
            - .build-tools
          key: v1-dependencies-{{ checksum "build.gradle.kts" }}

      # run build
      - run:
          name: Building the plugins...
          command: gradle build-plugin -PuseLocalDependency=false

      # Store the artifacts of the build
      - store_artifacts:
          path: server/plugins
          destination: ./build-artifacts

      # Prepare the workspace artifacts to be shared with other jobs
      - run:
          name: "Copy build files into temporary persistent workspace"
          command: "mkdir build-artifacts && cp server/plugins/*.jar build-artifacts/"

      - run:
          name: "Discovering the project version"
          command: 'mkdir temp && gradle properties | grep -i ^version | egrep -o "([0-9]{1,}\.)+[0-9]{1,}" > ./temp/version.txt'

      - persist_to_workspace:
          root: .
          paths:
            - build-artifacts
            - temp

      - discord/status:
          fail_only: false
          failure_message: ":red_circle: The $CIRCLE_JOB job has failed!"
          success_message: ":tada: The $CIRCLE_JOB job has succeeded!"

  pre-publish:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - discord/approval:
          message: ":raised_hand: Waiting for approval..."
          mentions: "216180750331019264"
          color: "16098851"
      - attach_workspace:
          at: "./.workspace"
      - run:
          name: "Lists the build artifacts and version"
          command: " echo Build Artifacts && ls -al .workspace/build-artifacts && echo && echo Version $(cat .workspace/temp/version.txt)"

  publish-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: "./.workspace"

      - discord/notify:
          message: ":rocket: Publishing..."
          color: "16312092"

      - run:
          name: "Set version as environment variable"
          command: "export VERSION=v$(cat .workspace/temp/version.txt)"

      - run:
          name: "Publish Release on GitHub"
          command: "ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} .workspace/build-artifacts"

      - discord/status:
          fail_only: false
          failure_message: ":red_circle: Failed to publish $CIRCLE_PROJECT_REPONAME/$VERSION"
          success_message: ":tada: The $CIRCLE_PROJECT_REPONAME/$VERSION has been published successfully!"

workflows:
  version: 2.1

  main:
    jobs:
      - build
      - pre-publish:
          filters:
            branches:
              only:
                - release
          requires:
            - build
      - hold-for-publish:
          type: approval
          filters:
            branches:
              only:
                - release
          requires:
            - pre-publish
      - publish-release:
          filters:
            branches:
              only:
                - release
          requires:
            - hold-for-publish
